name: tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests-core:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.12"]
        os: [ubuntu-latest, windows-latest]
        exclude:
          - os: windows-latest
            python-version: "3.9"

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install pip packages
        run: |
          pip install -r tests/requirements.txt
          pip install .[dev]

      - name: Run tests with pytest
        run: pytest --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'

  tests-covalent:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install pip packages
        run: |
          pip install -r tests/requirements.txt
          pip install -r tests/requirements-covalent.txt
          pip install .[dev]

      - name: Make quacc config
        run: quacc set WORKFLOW_ENGINE covalent

      - name: Start Covalent server
        run: covalent start

      - name: Run tests with pytest
        run: pytest tests/covalent --cov=quacc --cov-report=xml

      - name: Stop Covalent server
        run: covalent stop

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'

  tests-engines:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11"]
        wflow_engine: [parsl, redun, jobflow]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install pip packages
        run: |
          pip install -r tests/requirements.txt
          pip install -r tests/requirements-${{ matrix.wflow_engine }}.txt
          pip install .[dev]

      - name: Make quacc config
        run: quacc set WORKFLOW_ENGINE ${{ matrix.wflow_engine }}

      - name: Run tests with pytest
        run: pytest tests/${{ matrix.wflow_engine }} --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'

  tests-psi4:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11"]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: quacc-env

      - name: Install conda packages
        run: |
          conda install -n base conda-libmamba-solver
          conda install psi4 python=3.11 -c conda-forge/label/libint_dev -c conda-forge --solver libmamba

      - name: Install pip packages
        run: |
          pip install -r tests/requirements.txt
          pip install .[dev]

      - name: Run tests with pytest
        run: pytest -k 'psi4' --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'

  tests-defects-phonons:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11"]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: quacc-env

      - name: Install pip packages
        run: |
          pip install -r tests/requirements.txt
          pip install -r tests/requirements-defects-phonons.txt
          pip install .[dev]

      - name: Run tests with pytest
        run: pytest -k 'defects or phonon' --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'

  tests-tblite-dftbplus:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11"]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: quacc-env

      - name: Install conda packages
        run: conda install -c conda-forge dftbplus

      - name: Install pip packages
        run: |
          pip install -r tests/requirements.txt
          pip install -r tests/requirements-tblite-dftbplus.txt
          pip install .[dev]

      - name: Run tests with pytest
        run: pytest -k 'dftb or tblite' --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'

  tests-qchem-sella-newtonnet:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.11"]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: quacc-env

      - name: Install conda packages
        run: conda install -c conda-forge openbabel

      - name: Install pip packages
        run: |
          pip install -r tests/requirements.txt
          pip install -r tests/requirements-qchem-sella-newtonnet.txt
          pip install .[dev]

      - name: Run tests with pytest
        run: pytest -k 'qchem or sella or newtonnet' --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'
