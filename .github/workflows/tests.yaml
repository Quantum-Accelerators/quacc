name: tests
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

env:
  CACHE_NUMBER: 0
          
jobs:

  # pre_test:
  #   continue-on-error: true # Uncomment once integration is finished
  #   runs-on: ubuntu-latest
  #   outputs:
  #     should_skip: ${{ steps.skip_check.outputs.should_skip }}
  #   steps:
  #     - id: skip_check
  #       uses: fkirc/skip-duplicate-actions@v5
  #       with:
  #         concurent_skipping: same_content_newer
  #         paths_ignore: '["**/README.md", "**/docs/**"]'
  #         do_not_skip: '["schedule", "release"]'

  test:
    # needs: pre_test
    # if: needs.pre_test.outputs.should_skip != 'true'
    
    strategy:
      matrix:
        python-version: ['3.8', '3.9']
        
    runs-on: ubuntu-latest
            
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v3

      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: quacc-env

      - name: Set up pip caching
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Export date
        id: get-date
        run: echo "name=today::$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash
          
        # Could not get caching to work...
#       - name: Set up conda caching
#         uses: actions/cache@v3
#         with:
#           path: /usr/share/miniconda3/envs/quacc-env
#           key: conda-${{ runner.os }}-${{ runner.arch }}-${{ steps.get-date.outputs.today }}-${{ hashFiles('setup.py') }}-${{ hashFiles('conda_codes.yaml') }}-${{ env.CACHE_NUMBER }}
      
      - name: Install pip packages
        run: |
          pip install -r requirements.txt
          pip install .[all]
          pip install .[codes]
          pip install .[tests]
          pip install chardet
          pip install pytest-cov
        id: cache

      - name: Install conda packages
        run: |
          # Update conda_codes.yaml manually if this is changed
          conda install -c psi4 psi4
          conda install -c conda-forge dftbplus==22.2
        
      - name: Run tests with pytest
        run: pytest --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'arosen93/quacc'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install pandoc
        run: sudo apt-get install pandoc
        
      - uses: actions/setup-python@v3
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .[docs]
          
      - name: Build
        run: sphinx-build docs/src docs_build
