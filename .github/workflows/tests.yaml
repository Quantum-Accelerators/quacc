name: tests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.9", "3.10"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install pip packages
        run: |
          pip install .[strict,dev,optimizers]
          pip install git+https://github.com/Quantum-Accelerators/covalent-hpc-plugin.git

      - name: Set up Covalent server
        run: |
          echo "y" | covalent purge
          covalent start

      - name: Run tests with pytest
        run: pytest --cov=quacc --cov-report=xml

      - name: Stop Covalent server
        run: covalent stop

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'

  tests-tblite:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10"]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install pip packages
        run: pip install .[strict,dev,tblite]

      - name: Run tests with pytest
        run: pytest -k 'tblite' --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'

  tests-psi4:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10"]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: quacc-env

      - name: Install conda packages
        run: conda install -c psi4 psi4

      - name: Install pip packages
        run: pip install .[strict,dev]

      - name: Run tests with pytest
        run: pytest -k 'psi4' --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'

  tests-dftbplus:
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10"]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          activate-environment: quacc-env

      - name: Install conda packages
        run: conda install -c conda-forge dftbplus

      - name: Install pip packages
        run: pip install .[strict,dev]

      - name: Run tests with pytest
        run: pytest -k 'dftb' --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'

  tests-altwflows:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.10"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install pip packages
        run: pip install .[strict,dev,fireworks,parsl,prefect]

      - name: Run tests with pytest
        run: pytest -k 'jobflow or fireworks or parsl or prefect' --cov=quacc --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: github.repository == 'Quantum-Accelerators/quacc'
